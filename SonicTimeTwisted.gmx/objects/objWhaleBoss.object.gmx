<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWhaleBoss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>objNonSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>remove=0;
image_speed=0;
image_index = 1;
//image_xscale=-1;
state=0;
direction = 300;
jaw = instance_create(x,y,objWhaleBossJaw)
with jaw { parentId = other; }
fin = instance_create(x,y,objWhaleFin)
with fin { parentId = other; }
draw_direction=direction;
explosionLoop=0;

jump_timer=20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xran =random(200)-100;
var yran =random(60)-20;
instance_create(x+xran+40,y+yran,objExplosionCluster);
gravity=.25;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xran =random(200)-100;
var yran =random(60)-20;
instance_create(x+xran+40,y+yran,objExplosionCluster);
if explosionLoop == 1 or explosionLoop == 8 or explosionLoop == 16 or explosionLoop == 24
    play_sfx(sndBombExplosion,1);
if explosionLoop &gt; 24 {
    alarm[2]=4;
} else {
    alarm[0]=5;
    explosionLoop++;
}
if explosionLoop== 8 {
    gravity=.25;
    
    with jaw {
    
        direction=105;
        speed=6;
        gravity=.25;
        destroyed=true;
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xran =random(200)-100;
var yran =random(60)-20;
instance_create(x+xran+40,y+yran,objExplosionCluster);
alarm[1]=4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// track jaw/fin
if !instance_exists(jaw) exit;
if !instance_exists(fin) exit;
if jaw.life &gt; 0 {
    jaw.x=x;
    jaw.y=y;
    jaw.image_angle=floor(direction);
}
if instance_exists(objWhaleFin) {
    fin.x=x;
    fin.y=y;
    fin.image_angle=floor(direction);
    fin.image_xscale=image_xscale;
if sprite_index == sprWhaleBossJump {
 fin.sprite_index = sprWhaleBossFinJump;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// do nothing if can't find controller
    if !instance_exists(objTTBossController) {
        exit;
    }

switch state {
case 0: // Time before first jump - not using a timer because it's a one-time thing
    jump_timer -= 1;
    
    with objLevel.player[0] {
        if other.jump_timer &lt;= 0 {
            other.state = 1; 
        }
    }
break;
case 1: // Jump start left
    remove=0;
    direction = 278; // 278
    speed = -6.5;
    sprite_index = sprWhaleBossJump;
    jaw.sprite_index=sprWhaleBossJaw;
    state = 2;
    play_sfx(sndWaterBumper,1);
    with objLevel.player[0] {
        other.x = objTTBossController.x + 500; //500
        other.y = objTTBossController.y + 340; //320
    }
break;
case 2: // Jump Left
    direction +=.75;
    if y &gt; objTTBossController.y + sprite_height+256{
    
        state = 3;
    
    }
break;
case 3: // Start Move Right
    x = objTTBossController.x - 500;
    y = objTTBossController.y + 94;
    state = 4;
    speed = 0;
    direction=0;
    sprite_index = sprWhaleBoss;
    image_xscale = -1;
    play_sfx(sndWaterBumper,1);
break;
case 4: // Move Right
    x+=8;
    
    if x &gt; objTTBossController.x + 500 {
    
        state = 5;
    
    }
break;
case 5: // Start Move Left
    x = objTTBossController.x + 500;
    y = objTTBossController.y + 94;
    state = 6;
    speed = 0;
    direction=0;
    sprite_index = sprWhaleBoss;
    image_xscale = 1;
    play_sfx(sndWaterBumper,1);
break;
case 6: // Move Left
    x-=8;
    
    if x &lt; objTTBossController.x - 500 {
    
        state = 7;
        instance_create(view_xview+view_wview*.5,view_yview+view_hview*.5+16,objWhaleBossTowardsCam);
    }
break;
case 7:
    // Do nothing wait for head on attack to end...
break;
case 8: // Jump start Left
    direction = 278; // 278
    speed = -6.5;
    sprite_index = sprWhaleBossJump;
    state = 9;
    image_xscale = 1;
    image_yscale = 1;
    play_sfx(sndWaterBumper,1);
    with objLevel.player[0] {
    other.x = objTTBossController.x + 380; //500
    other.y = objTTBossController.y + 320; //340
    }
break;
case 9: // Jump Left
    direction +=1;
    if y &gt; objTTBossController.y + sprite_height+256{
    
        state = 10;
    
    }
break;
case 10: // Jump start Right
    direction = 262; // 278
    speed = -6.5;
    sprite_index = sprWhaleBossJumpInvert;
    state = 11;
    image_xscale = 1;
    image_yscale = 1;
    play_sfx(sndWaterBumper,1);
    jaw.sprite_index=sprWhaleBossJawInvert
    with objLevel.player[0] {
    other.x = objTTBossController.x - 380; //500
    other.y = objTTBossController.y + 320; //340
    }
break;
case 11: // Jump Right
    direction -=1;
    if y &gt; objTTBossController.y + sprite_height+256{
    
        state = 1;
    
    }
break;
case 12:
    if y &gt; 1164{
    
    gravity=0;
    speed=0;
    if !audio_is_playing(sndSplash)
        play_sfx(sndSplash,4);
    with objLevel.player[0].camera right=10368;
    state=13;
    
}
 //  with objLevel { stop_level_music() }
break;
case 13:
    gravity=0;
    
break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check if should destroy
if jaw.life &lt;= 0 &amp;&amp; state &lt;12 {
    with jaw reaction_script=noone;
    with fin instance_destroy();
    alarm[1]=10;
    state=12;
    speed=0;
    if sprite_index==sprWhaleBossJumpInvert {
    sprite_index=sprWhaleBossDamageInvert;
    } else sprite_index=sprWhaleBossDamage;
    
    stop_all_music(false);
} else if state &lt;12 draw_direction=direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,floor(draw_direction),c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
