<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objSceneObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
// properties
left = 0;
top = 0;
right = room_width;
bottom = room_height;
ground_mode = true;
// panning
offset_x = 0;
offset_y = 0;
panning_hspeed = 0;
panning_vspeed = 0;
// setup view
view_id = instance_number(objCamera) - 1;
view_xview[view_id] = clamp(x-view_wview[view_id]*0.5, left, right-view_wview[view_id]);
view_yview[view_id] = clamp(y-view_hview[view_id]*0.5, top, bottom-view_hview[view_id]);
screenShake=false;
view_xorigin=view_xview;
view_yorigin=view_yview;
xSpeed = 0;
shake=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screenShake=false;
view_xorigin=view_xview;
view_yorigin=view_yview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>alarm[0]</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update camera position
var ox, oy, view_yspeed;
// define center offset
ox = x-(view_xview[view_id]+view_wview[view_id]*0.5);
oy = y-(view_yview[view_id]+view_hview[view_id]*0.5);
if room == MM1 {
    ox +=88;
} 
// apply panning offsets camera cord reletive to center
ox += (offset_x*sine[gravity_direction])+(offset_y*cosine[gravity_direction]);
oy += (offset_x*cosine[gravity_direction])-(offset_y*sine[gravity_direction]);
// define borders
if abs(ox)&gt;8 ox -= 8*sign(ox); else ox = 0;
if not ground_mode {if abs(oy)&gt;32 oy -= 32*sign(oy); else oy = 0;}
// limit speed
view_yspeed = min(6+abs(y-yprevious), 22);
if abs(ox)&gt;22 ox = 22*sign(ox);
if abs(oy)&gt;view_yspeed oy = view_yspeed*sign(oy);
// horizontal movement
if panning_hspeed&gt;0
{
    // move automatically
    if view_xview[view_id]&lt;left view_xview[view_id] = min(view_xview[view_id]+panning_hspeed, left); else
    if view_xview[view_id]+view_wview[view_id]&gt;right view_xview[view_id] = max(view_xview[view_id]-panning_hspeed, right-view_wview[view_id]); else
    panning_hspeed = 0;
}
else
{
    // focus on player
    if ox&lt;0 and view_xview[view_id]&gt;=left view_xview[view_id] = max(view_xview[view_id]+ox, left);
    if ox&gt;0 and view_xview[view_id]+view_wview[view_id]&lt;=right view_xview[view_id] = min(view_xview[view_id]+ox, right-view_wview[view_id]);
}
// vertical movement
if panning_vspeed&gt;0
{
    // move automatically
    if view_yview[view_id]&lt;top view_yview[view_id] = min(view_yview[view_id]+panning_vspeed, top); else
    if view_yview[view_id]+view_hview[view_id]&gt;bottom view_yview[view_id] = max(view_yview[view_id]-panning_vspeed, bottom-view_hview[view_id]); else
    panning_vspeed = 0;
}
else
{
    // focus on player
    if oy&lt;0 and view_yview[view_id]&gt;=top view_yview[view_id] = max(view_yview[view_id]+oy, top);
    if oy&gt;0 and view_yview[view_id]+view_hview[view_id]&lt;=bottom view_yview[view_id] = min(view_yview[view_id]+oy, bottom-view_hview[view_id]);
}

// calculate xspeed only for reference
xSpeed = x - xprevious;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screen Shake
if shake {
    var amountx=-4+round(random(8)); 
    while ( view_xview[view_id] + amountx &gt; right|| view_xview[view_id] + amountx &lt; left) { amountx=-4+round(random(8)); }
    
    var amounty=-4+round(random(8)); 
    while ( view_yview[view_id] + amounty &lt; top || view_yview[view_id] + amounty &gt; bottom) { amounty=-4+round(random(8)); }
       
        
        view_xview = clamp(view_xview[view_id] + amountx, left, right - view_wview[view_id]);
        view_yview = clamp(view_yview[view_id] + amounty, top, bottom - view_hview[view_id]);
        rumble(rumble_ground_shake);
    shake=false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
