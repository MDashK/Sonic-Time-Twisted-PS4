<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
var i;
// properties
spacing = 2;
angle = 0;
angle2 = 0;
flip = false;
// initialize
for (i=0; i&lt;3; i+=1) {px[i] = floor(x); py[i] = floor(y);}
// start timer
alarm[0] = 1200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear invincibility
player_id.invincibility = noone;
// reveal shield
with player_id.shield visible = true;
// clean up
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update position
var size, i, offset;
if !instance_exists(player_id) { instance_destroy(); }
    size = ds_list_size(player_id.xtable);
if size &gt; 0 {
    // adjust sparks
    
    for (i=0; i&lt;3; i+=1)
    {
        offset = size-1-((i+1)*spacing);
        if offset&lt;0 offset += size;
        if is_real(ds_list_find_value(player_id.xtable, offset)) &amp;&amp; is_real(ds_list_find_value(player_id.ytable, offset)) {
            px[i] = floor(ds_list_find_value(player_id.xtable, offset));
            py[i] = floor(ds_list_find_value(player_id.ytable, offset));
        }
    }
    
    // adjust angles
    angle = angle_wrap(angle-22.5);
    angle2 = angle_wrap(angle2-11.25);
    
    // animation
    flip = !flip;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw invincibility sparks
var c, s;
// fourth circle
c = cosine[angle2]*16;
s = sine[angle2]*16;
draw_sprite(sprMutekiSpark4, image_index, px[2]+c, py[2]-s);
draw_sprite(sprMutekiSpark4, image_index+5, px[2]-c, py[2]+s);
// third circle
draw_sprite(sprMutekiSpark3, image_index, px[1]-s, py[1]-c);
draw_sprite(sprMutekiSpark3, image_index+6, px[1]+s, py[1]+c);
// second circle
draw_sprite(sprMutekiSpark2, image_index, px[0]+c, py[0]-s);
draw_sprite(sprMutekiSpark2, image_index+7, px[0]-c, py[0]+s);
// first circle
c = cosine[angle]*16;
s = sine[angle]*16;
if (flip)
{
    draw_sprite(sprMutekiSpark1,image_index, x+c, y-s);
    draw_sprite(sprMutekiSpark1,image_index+5, x-c, y+s);
}
else
{
    draw_sprite(sprMutekiSpark1,image_index, x+s, y+c);
    draw_sprite(sprMutekiSpark1,image_index+5, x-s, y-c);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
