<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBubblesRegion</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objNonSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reaction_script = player_reaction_bubbles_badnik;
active=false;
player_id=noone;
allow_collision=true;
angle = 0;
orbit_speed = 2;
radius=0;
image_speed =0;
var os = 0;
for( var i=0; i &lt; 24; i+=1 ) {
    
    os +=random(32)+32;
    bubble_length[i]=48+random(64);
    bubble_index[i]=random(4)+1;
    bubble_angle[i] = point_direction(x,y,x+64,y+64)+os;    
    bubblex[i] = lengthdir_x(bubble_length[i],bubble_angle[i]) + x;
    bubbley[i] = lengthdir_y(bubble_length[i],bubble_angle[i]) + y;
    
}   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = false;
allow_collision = false;
alarm[0]=10; 
with player_id      player_is_falling();
player_id = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>allow_collision = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle Player State
if not active
{
    player_id=noone;
}
else
{    
angle = point_direction(x,y,player_id.x,player_id.y);
angle_new = (angle + orbit_speed + 360)mod(360);
player_id.x = lengthdir_x(radius,angle_new) + x;
player_id.y = lengthdir_y(radius,angle_new) + y;
            
    with player_id {
    
        // update underwater state
        player_update_water();
        // non-solid object collision
        player_collision_object();
        
        // jumping
        if input_check_pressed(cACTION) and not player_collision_ceiling(offset_y+5){
            
            other.active = false;
            other.allow_collision = false;
            other.alarm[0]=10; 
            player_is_jumping();
            
        }
        
        //check for other states
        if state != player_state_object_with_rumble {
        
            other.active = false;
            other.allow_collision = false;
            other.alarm[0]=40;   
        
        }
        if other.visible == false {
        
            other.active = false;
            other.allow_collision = false;
            other.alarm[0]=60; 
            player_is_falling();
       
        }
        
    }      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Bubbles
for( var i=0; i &lt; 24; i+=1 ) {
    bubble_angle[i] += 2;    
    bubblex[i] = lengthdir_x(bubble_length[i],bubble_angle[i]) + x;
    bubbley[i] = lengthdir_y(96,bubble_angle[i]) + y;
    
}
if visible == false {
        
        reaction_script = noone;
        
    }
    
    else {
    
        reaction_script = player_reaction_bubbles_badnik;
    
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Bubbles
    
for( var i=0; i &lt; 24; i+=1 ) {
    
    draw_sprite(sprBubble,bubble_index[i],bubblex[i],bubbley[i]);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>80,80</point>
    <point>80,80</point>
  </PhysicsShapePoints>
</object>
